<!DOCTYPE html>
<html lang="en">
<head>
    <%- include("../partials/meta") %>
    <title>CANLI STOK</title>
    <style>
         input[type="checkbox"] {
             accent-color: yellow; /* Checkbox işaretleme rengi */
             width: 20px;
             height: 20px;
         }

         
    </style>
</head>
<body class="bg-dark">

    <%- include("../partials/nav") %>
    
    <div class="d-flex flex-wrap justify-content-center align-items-center p-3 w-100">

        <!-- <button id="logoutBtn" class="btn btn-danger">Çıkış Yap</button> -->


        <div style="max-height: 100vh; overflow-y: auto;" class="bg-primary mt-5 w-100  p-3">

            <h3 class="text-white">SİPARİŞ EDİLECEK MALZEMELER</h3>

           <table class="table bg-primary text-white mt-3 table-bordered border-dark ">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">MALZEME ADI</th>
                        <th scope="col">KALAN STOK</th>
                        <th scope="col">SİPARİŞ DURUMU</th>
                        
                    </tr>
                </thead>
                <tbody id="canlıStokList">
                        <!-- <tr>
                            <td>burası dinamik olarak dolacak</td>
                        </tr> -->
                </tbody>
           </table>

           
           <!-- /////////////////////////////////////// -->
            <!-- pagination denemesi  -->
           <!-- <div class="w-100 d-flex justify-content-center align-items-center">

            <nav aria-label="Sayfalama" class="mt-3 w-100">
                <ul class="pagination " id="pagination">
                    <li class="page-item">
                        <a class="page-link mx-2 fs-5" href="#" id="prevPage"> <i class="fa-solid fa-circle-chevron-left fs-5"></i> Önceki </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link fs-5" href="#" id="nextPage">Sonraki <i class="fa-solid fa-circle-chevron-right fs-5"></i></a>
                    </li>
                </ul>
            </nav>

           </div> -->

           




           <!-- //////////////////////////////////////////// -->


        </div>
        <!-- <div style="max-height: 50vh; overflow-y: auto; " class="bg-warning mt-5 w-100  p-3">
            <h3>ATÖLYE İÇİN HAFTALIK ALINACAKLAR</h3>
            <ul>
                <li>malzeme 1</li>
                <li>malzeme 1</li>
                <li>malzeme 1</li>
                <li>malzeme 1</li>
                <li>malzeme 1</li>
                
            </ul>
        </div> -->
    </div>

    
    


    <script>

            document.addEventListener("DOMContentLoaded", async () => {
                try {
                    const response = await fetch("/lowStock/get");
                    const siparisListesi = await response.json();

                    siparisListesi.forEach(siparisİtem => {
                        const canlıStokList = document.querySelector("#canlıStokList");
                        canlıStokList.innerHTML += `
                            <tr  data-id="${siparisİtem.malzeme_id}" style="text-decoration: ${siparisİtem.checked ? "line-through" : "none"};">
                                <th scope="row">${siparisİtem.malzeme_id}</th>
                                <td >${siparisİtem.urun_malzeme_adi}</td>
                                <td >${siparisİtem.urun_malzeme_adet}</td>
                                <td style="width: 20px;">
                                    <input type="checkbox" class="malzeme-checkbox" ${siparisİtem.checked ? "checked" : ""} />
                                </td>
                            </tr>
                        `;
                    });

                    // Checkbox'lar için olay dinleyici ekle
                    document.querySelectorAll(".malzeme-checkbox").forEach(checkbox => {
                        checkbox.addEventListener("change", async (event) => {
                            const row = event.target.closest("tr");
                            const malzemeId = row.dataset.id;

                            
                            
                            // Backend'e güncelleme isteği gönder
                            try {
                                const updateResponse = await fetch("/lowStock/update", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    body: JSON.stringify({ malzeme_id: malzemeId, checked: event.target.checked }),
                                });

                                if (updateResponse.ok) {
                                    // Güncelleme başarılı ise satırı üstü çizili yap
                                    row.style.textDecoration = event.target.checked ? "line-through" : "none";
                                    
                                } else {
                                    console.error("Güncelleme başarısız");
                                }
                                
                            } catch (error) {
                                console.error("checkbox güncelleme Hata:", error);
                            }
                        });
                    });
                } catch (error) {
                    console.log("canlı alınacak", error);
                }



            });

            //////////////////////////////////////////////////////////////////////////////

            // document.addEventListener("DOMContentLoaded", async () => {
            //     try {
            //         const response = await fetch("/lowStock/get");
            //         const siparisListesi = await response.json();

            //         const itemsPerPage = 5; // Sayfa başına gösterilecek öğe sayısı
            //         let currentPage = 1;
            //         const canlıStokList = document.querySelector("#canlıStokList");

            //         function renderTable(page) {
            //             canlıStokList.innerHTML = ""; // Önceki veriyi temizle
            //             const start = (page - 1) * itemsPerPage;
            //             const end = start + itemsPerPage;
            //             const paginatedItems = siparisListesi.slice(start, end);

            //             paginatedItems.forEach(siparisİtem => {
            //                 canlıStokList.innerHTML += `
            //                     <tr data-id="${siparisİtem.malzeme_id}" style="text-decoration: ${siparisİtem.checked ? "line-through" : "none"};">
            //                         <th scope="row">${siparisİtem.malzeme_id}</th>
            //                         <td>${siparisİtem.urun_malzeme_adi}</td>
            //                         <td>${siparisİtem.urun_malzeme_adet}</td>
            //                         <td style="width: 20px;">
            //                             <input type="checkbox" class="malzeme-checkbox" ${siparisİtem.checked ? "checked" : ""} />
            //                         </td>
            //                     </tr>
            //                 `;
            //             });

            //             // Checkbox olaylarını tekrar ekle
            //             document.querySelectorAll(".malzeme-checkbox").forEach(checkbox => {
            //                 checkbox.addEventListener("change", async (event) => {
            //                     const row = event.target.closest("tr");
            //                     const malzemeId = row.dataset.id;

            //                     try {
            //                         const updateResponse = await fetch("/lowStock/update", {
            //                             method: "POST",
            //                             headers: { "Content-Type": "application/json" },
            //                             body: JSON.stringify({ malzeme_id: malzemeId, checked: event.target.checked }),
            //                         });

            //                         if (updateResponse.ok) {
            //                             row.style.textDecoration = event.target.checked ? "line-through" : "none";
            //                         } else {
            //                             console.error("Güncelleme başarısız");
            //                         }
            //                     } catch (error) {
            //                         console.error("Checkbox güncelleme hatası:", error);
            //                     }
            //                 });
            //             });

            //             // Sayfa butonlarını kontrol et
            //             document.getElementById("prevPage").parentElement.classList.toggle("disabled", currentPage === 1);
            //             document.getElementById("nextPage").parentElement.classList.toggle("disabled", end >= siparisListesi.length);
            //         }

            //         // İlk sayfayı yükle
            //         renderTable(currentPage);

            //         // Sayfa değiştirme butonlarına olay ekleyelim
            //         document.getElementById("prevPage").addEventListener("click", (event) => {
            //             event.preventDefault();
            //             if (currentPage > 1) {
            //                 currentPage--;
            //                 renderTable(currentPage);
            //             }
            //         });

            //         document.getElementById("nextPage").addEventListener("click", (event) => {
            //             event.preventDefault();
            //             if (currentPage * itemsPerPage < siparisListesi.length) {
            //                 currentPage++;
            //                 renderTable(currentPage);
            //             }
            //         });

            //     } catch (error) {
            //         console.log("Canlı alınacak hata:", error);
            //     }
            // });

         document.getElementById("logoutBtn").addEventListener("click", () => {
            // LocalStorage'daki bilgileri temizle
            localStorage.removeItem("user");
            localStorage.removeItem("role");
            localStorage.removeItem("expires");

            // Login sayfasına yönlendir
            window.location.href = "/login";
        });

        const user = JSON.parse(localStorage.getItem("user"));
        if (user && user.expires < Date.now()) {
            // Süresi geçmiş, logout
            localStorage.clear();
            alert("Oturum süresi doldu. Lütfen tekrar giriş yapınız.");
            window.location.href = "/login";
        }
        


    </script>

   


</body>
</html>