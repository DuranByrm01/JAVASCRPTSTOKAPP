<!DOCTYPE html>
<html lang="tr">

<head>
  <%- include("../partials/meta") %>
    <title>MALZEME GİRİŞ/ÇIKIŞ</title>
</head>

<body class="bg-dark">
  <%- include("../partials/nav") %>

  <div class="d-flex justify-content-center align-items-center mt-3 mb-3" id="urunContainer">

  </div>

  

  <main class="bg-dark">

    <%- include("../partials/eklecıkar") %>

    <br><br><br>


    <div class="bg-warning p-3">

      <h3>GİRDİLER/ÇIKTILAR</h3>

      <div>
        <input class="form-control p-2 mb-2  w-auto" id="searchInput" type="text" placeholder="MALZEME ARA" oninput="searchBox()">
      </div>    

      <div  class="table-responsive" style="max-height: 300px; overflow-y: auto;">
              
        <table  class="table bg-primary text-white mt-3 table-bordered border-dark ">
            <thead>
                <tr>
                    <th style="width: 10px;" scope="col">#</th>
                    <th scope="col">ÜRÜN ADI</th>
                    <th scope="col">ÜRÜN DETAY</th>
                    <th scope="col">ÜRÜN ADET</th>
                    <th scope="col">ÜRÜN GİRİŞ/ÇIKIŞ</th>
                    <th scope="col">ÜRÜN TARİH</th>
                </tr>
            </thead>
            <tbody id="addRemovelogListTable" class="dataListSearch">
                
                    <tr>
                        <th scope="row"></th>
                        <td >deneme</td>
                        <td >deneme</td>
                        <td >deneme</td>
                        <td >deneme</td>
                        <td >deneme</td>
                        
                    </tr>
                
            </tbody>
        </table>
    </div>


     
       

    </div>

  </main>
  

  <script>

  document.addEventListener('DOMContentLoaded', async () => {

   
    try {

      const response = await fetch('/add/Remove');
      const addRemoveList = await response.json();

      const addRemovelogListTable = document.querySelector("#addRemovelogListTable");
      addRemovelogListTable.innerHTML = "";

      addRemoveList.reverse().forEach((addRemoveData , index) => {
          const tableRow = `

           <tr>
              <th scope="row">${index + 1}</th>
              <td ><strong class="bg-warning text-dark p-1">${addRemoveData.urun_adi}</strong></td>
              <td ><strong class="bg-warning text-dark p-1">${addRemoveData.malzeme_adi.toUpperCase()}</strong></td>
              <td ><strong class="bg-warning text-dark p-1"> ${addRemoveData.amount}</strong></td>
              <td ><strong class="bg-warning text-dark p-1">${addRemoveData.action.toUpperCase()}</strong></td>
              <td ><strong class="bg-warning text-dark p-1">${addRemoveData.date}</strong></td>
                     
           </tr
          
          `;
          addRemovelogListTable.innerHTML += tableRow;
      });

       

    } catch (error) {
      console.log("/add/remove hatası",error)
    }

    
    


  });

  function searchBox(){

    try {
          const searchInput = document.querySelector("#searchInput").value.toLowerCase().trim();

          const dataListItem = document.querySelectorAll(".dataListSearch tr");

          dataListItem.forEach((item) => {

            const dataText = item.textContent.toLowerCase().trim();

            if (!searchInput || dataText.includes(searchInput)) {
                item.style.display = "";
            } else {
                item.style.display = "none";
            }




          } )
    } catch (error) {
      console.log("searchBox hatası", error)
    }


  }

  



  </script>

  <script>
      
      document.addEventListener("DOMContentLoaded", () => {
        const role = localStorage.getItem("role");
        const userAllowedPages = ["/liveScreen", "/urunList"];
        const currentPath = window.location.pathname;

        if (role === "user" && !userAllowedPages.includes(currentPath)) {
          alert("Bu sayfaya erişiminiz yok.");
          window.location.href = "/liveScreen";
        }

        // logoutBtn varsa event ekle
        const logoutBtn = document.getElementById("logoutBtn");
        if (logoutBtn) {
          logoutBtn.addEventListener("click", (e) => {
            e.preventDefault();
            localStorage.clear();
            window.location.href = "/login";
          });
        }

        const user = JSON.parse(localStorage.getItem("user"));
        if (user && user.expires < Date.now()) {
          localStorage.clear();
          alert("Oturum süresi doldu. Lütfen tekrar giriş yapınız.");
          window.location.href = "/login";
        }
      });


      //////////////////////////////////////////////////////////////////////////////

      document.addEventListener("DOMContentLoaded", () => {
          const userStr = localStorage.getItem("user");
          if (!userStr) {
            // user yoksa direk login
            window.location.href = "/login";
            return;
          }

          let user = null;
          try {
            user = JSON.parse(userStr);
          } catch (e) {
            // parse hatası olursa da login
            window.location.href = "/login";
            return;
          }

          // expires kontrolü
          if (!user.expires || user.expires < Date.now()) {
            localStorage.clear();
            window.location.href = "/login";
            return;
          }

          // role kontrolü
          if (user.role !== "admin" && user.role !== "user") {
            window.location.href = "/login";
            return;
          }

          // Tüm kontroller geçerse sayfada kal, gerekirse devam et
          console.log("Giriş doğrulandı:", user.username, user.role);
      });


    </script>
 

    
</body>

</html>